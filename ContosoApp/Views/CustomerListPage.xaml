<!--
Copyright (c) Microsoft Corporation.  All rights reserved.
The MIT License (MIT)
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<Page x:Class="ContosoApp.Views.CustomerListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:converter="using:ContosoApp.ValueConverters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ContosoApp.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:uc="using:ContosoApp.UserControls"
      xmlns:viewModels="using:ContosoApp.ViewModels"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <Page.Resources>

        <CollectionViewSource x:Key="CustomersCVS" Source="{x:Bind ViewModel.Customers}"/>

        <converter:StringVisibilityConverter x:Key="stringVisConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="boolToVisConverter"/>
        <converter:NullToBooleanConverter x:Key="nullToBoolConverter"/>

        <MenuFlyout x:Key="ListViewContextMenu">
            <MenuFlyoutItem Click="ViewDetails_Click"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE1A5;"
                            Text="View details"/>
            <MenuFlyoutItem Click="AddOrder_Click"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE14D;"
                            Text="Add order"/>
            <MenuFlyoutSubItem Text="Sort by">
                <MenuFlyoutItem Click="MenuFlyoutSortByName_Click" Text="Last name"/>
                <MenuFlyoutItem Click="MenuFlyoutSortByCompany_Click" Text="Company"/>
            </MenuFlyoutSubItem>
            <MenuFlyoutSubItem Text="Group by">
                <MenuFlyoutItem Click="MenuFlyoutGroupByName_Click" Text="Last name"/>
                <MenuFlyoutItem Click="MenuFlyoutGroupByCompany_Click" Text="Company"/>
            </MenuFlyoutSubItem>
        </MenuFlyout>

        <x:Double x:Key="FirstNameWidth">150</x:Double>
        <x:Double x:Key="LastNameWidth">150</x:Double>
        <x:Double x:Key="PhoneNumberWidth">160</x:Double>
        <x:Double x:Key="EmailAddressWidth">250</x:Double>
        <x:Double x:Key="CompanyNameWidth">160</x:Double>
        <x:Double x:Key="OrdersWidth">60</x:Double>

    </Page.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <!--
                It's important to not put the list view in a row with Height="Auto". If you do that,
                the list height won't be constrained and the scrollbars won't show up. Use star(*) sizing instead.
                https://msdn.microsoft.com/windows/uwp/layout/layouts-with-xaml#layout-properties
            -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <RelativePanel Margin="24,0,12,0">
            <uc:PageHeader x:Name="PageTitle">
                <uc:PageHeader.HeaderContent>
                    <TextBlock Style="{StaticResource PageTitleTextBlockStyle}" Text="Customers"/>
                </uc:PageHeader.HeaderContent>
            </uc:PageHeader>

            <!--
                On Windows 10, version 1607 or later, set DefaultLabelPosition to Right in code.
                See CommandBar_Loaded event handler.
            -->
            <CommandBar HorizontalAlignment="Stretch"
                        Background="Transparent"
                        Loaded="CommandBar_Loaded"
                        RelativePanel.LeftOf="CustomerSearchBox"
                        RelativePanel.RightOf="PageTitle">
                <AppBarButton Click="ViewDetails_Click"
                              Icon="Contact"
                              IsEnabled="{x:Bind ViewModel.SelectedCustomer, Converter={StaticResource nullToBoolConverter}, Mode=OneWay}"
                              Label="View details"/>
                <AppBarButton Click="AddOrder_Click"
                              Icon="Shop"
                              IsEnabled="{x:Bind ViewModel.SelectedCustomer, Converter={StaticResource nullToBoolConverter}, Mode=OneWay}"
                              Label="Add order"/>
                <AppBarSeparator/>
                <AppBarButton Command="{x:Bind ViewModel.StartEditCommand}"
                              Icon="Edit"
                              IsEnabled="{x:Bind ViewModel.SelectedCustomer, Converter={StaticResource nullToBoolConverter}, Mode=OneWay}"
                              Label="Edit"/>
                <AppBarButton Click="CreateCustomer_Click"
                              Icon="Add"
                              Label="New"/>
                <AppBarButton Command="{x:Bind ViewModel.RefreshCommand}"
                              Icon="Refresh"
                              Label="Refresh"/>

            </CommandBar>
            <AutoSuggestBox x:Name="CustomerSearchBox"
                            Width="240"
                            Margin="12,8,0,0"
                            PlaceholderText="Search customers..."
                            QueryIcon="Find"
                            QuerySubmitted="CustomerSearchBox_QuerySubmitted"
                            RelativePanel.AlignRightWithPanel="True"
                            TextChanged="CustomerSearchBox_TextChanged"/>

        </RelativePanel>

        <Grid x:Name="errorPane"
              Grid.Row="1"
              Background="Firebrick"
              Padding="12,0,0,0"
              Visibility="{x:Bind ViewModel.ErrorText, Converter={StaticResource stringVisConverter}, Mode=OneWay}">
            <TextBlock Foreground="White" Text="{x:Bind ViewModel.ErrorText, Mode=OneWay}"/>
        </Grid>

        <SplitView x:Name="listSplitView"
                   Grid.Row="2"
                   Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                   DisplayMode="Inline"
                   IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
                   OpenPaneLength="260"
                   PaneBackground="{ThemeResource CommandBarBackground}"
                   PanePlacement="Right">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{StaticResource GridHeaderHeight}"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <ToggleButton x:Name="OpenSummaryButton"
                                  HorizontalAlignment="Right"
                                  AutomationProperties.Name="Show summary"
                                  IsChecked="{Binding IsPaneOpen,
                                                      ElementName=listSplitView,
                                                      Mode=TwoWay}"
                                  TabIndex="1"
                                  ToolTipService.ToolTip="Show summary">
                        <SymbolIcon Symbol="OpenPane"/>
                    </ToggleButton>

                    <StackPanel x:Name="CustomerInfoPanel"
                                Grid.Row="1"
                                Margin="16,8,8,8"
                                Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, ConverterParameter=true, Mode=OneWay}">
                        <StackPanel.Resources>
                            <Style TargetType="TextBox">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock FontWeight="SemiBold" Text="Name"/>
                        <TextBlock Margin="0,0,0,16" Text="{x:Bind ViewModel.SelectedCustomer.Name, Mode=OneWay}"/>
                        <TextBlock FontWeight="SemiBold" Text="Phone"/>
                        <TextBlock Margin="0,0,0,16" Text="{x:Bind ViewModel.SelectedCustomer.Phone, Mode=OneWay}"/>
                        <TextBlock FontWeight="SemiBold" Text="Email"/>
                        <HyperlinkButton Margin="0,0,0,16"
                                         Content="{x:Bind ViewModel.SelectedCustomer.Email, Mode=OneWay}"
                                         Padding="0,0,0,0"/>
                        <TextBlock FontWeight="SemiBold" Text="Address"/>
                        <HyperlinkButton Margin="0,0,0,16"
                                         Content="{x:Bind ViewModel.SelectedCustomer.Address, Mode=OneWay}"
                                         Padding="0,0,0,0"/>
                    </StackPanel>

                    <StackPanel x:Name="CustomerEditPanel"
                                Grid.Row="1"
                                Margin="16,8,8,8"
                                DataContext="{x:Bind ViewModel.EditDataContext, Mode=OneWay}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Converter={StaticResource boolToVisConverter}, Mode=OneWay}">
                        <StackPanel.Resources>
                            <Style TargetType="TextBox">
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="MinHeight" Value="60"/>
                                <Setter Property="Margin" Value="0,0,0,16"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Foreground="Firebrick"
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Text="{x:Bind ViewModel.SelectedCustomer.ErrorText, Mode=OneWay}"
                                   TextWrapping="WrapWholeWords"
                                   Visibility="{x:Bind ViewModel.SelectedCustomer.ErrorText, Converter={StaticResource stringVisConverter}, Mode=OneWay}"/>
                        <TextBox x:Name="CustomerFirstNameText"
                                 Header="First name"
                                 Text="{Binding FirstName,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox x:Name="CustomerLastNameText"
                                 Header="Last name"
                                 Text="{Binding LastName,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox x:Name="CustomerPhoneNumber"
                                 Header="Phone"
                                 InputScope="TelephoneNumber"
                                 Text="{Binding Phone,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox x:Name="CustomerEmailText"
                                 Header="Email"
                                 InputScope="EmailNameOrAddress"
                                 Text="{Binding Email,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox x:Name="CustomerAddress"
                                 Height="120"
                                 AcceptsReturn="True"
                                 Header="Address"
                                 InputScope="EmailNameOrAddress"
                                 IsSpellCheckEnabled="False"
                                 Text="{Binding Address,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap"/>

                        <Grid Margin="0,12,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="CancelButton"
                                    Margin="0,0,4,0"
                                    HorizontalAlignment="Stretch"
                                    Command="{x:Bind ViewModel.CancelEditsCommand}"
                                    Content="Cancel"/>
                            <Button x:Name="SaveButton"
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    Command="{x:Bind ViewModel.SaveCommand}"
                                    CommandParameter="{Binding}"
                                    Content="Save"
                                    IsEnabled="{Binding CanSave}"/>
                        </Grid>
                    </StackPanel>
                </Grid>

            </SplitView.Pane>

            <SplitView.Content>
                <Grid>
                    <ToggleButton x:Name="CloseSummaryButton"
                                  Height="{StaticResource HeaderHeight}"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  AutomationProperties.Name="Hide summary"
                                  Canvas.ZIndex="100"
                                  IsChecked="{Binding IsPaneOpen,
                                                      ElementName=listSplitView,
                                                      Mode=TwoWay}"
                                  TabIndex="1"
                                  ToolTipService.ToolTip="Hide summary"
                                  Visibility="{Binding IsChecked,
                                                       Converter={StaticResource boolToVisConverter},
                                                       ConverterParameter=True,
                                                       RelativeSource={RelativeSource Mode=Self}}">
                        <SymbolIcon Symbol="ClosePane"/>
                    </ToggleButton>

                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource GridHeaderHeight}"/>
                            <RowDefinition Height="*"/>
                            <!--
                                It's important to not put the list view in a row with Height="Auto". If you do that,
                                the list height won't be constrained and the scrollbars won't show up.
                            -->

                        </Grid.RowDefinitions>
                        <StackPanel Background="{StaticResource AccentBackgroundColor}" Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource HeaderTextBlockStyle}" TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="16"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock Width="{StaticResource FirstNameWidth}"
                                       Margin="12,0,0,0"
                                       Text=" First Name"/>
                            <TextBlock Width="{StaticResource LastNameWidth}" Text="Last Name"/>
                            <TextBlock Width="{StaticResource EmailAddressWidth}" Text="Email"/>
                            <TextBlock Width="{StaticResource PhoneNumberWidth}" Text="Phone"/>
                            <TextBlock Width="{StaticResource CompanyNameWidth}" Text="Company"/>
                        </StackPanel>
                        <!--  This progress indicator should be hidden when the data is finished loading in GetCustomerList.  -->
                        <ProgressBar x:Name="ProgressIndicator"
                                     Grid.Row="1"
                                     Margin="0,4"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Top"
                                     IsIndeterminate="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                                     Visibility="{x:Bind ViewModel.IsLoading, Converter={StaticResource boolToVisConverter}, Mode=OneWay}"/>
                        <uc:ContosoListView x:Name="CustomerList"
                                            Grid.Row="1"
                                            ContextMenu="{StaticResource ListViewContextMenu}"
                                            IsSynchronizedWithCurrentItem="False"
                                            ItemsSource="{Binding Source={StaticResource CustomersCVS}}"
                                            KeyUp="ListView_KeyUp"
                                            SelectedItem="{Binding SelectedCustomer,
                                                                   Mode=TwoWay}">
                            <ListView.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Style="{StaticResource SubheaderTextBlockStyle}" Text="{Binding Key}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListView.GroupStyle>

                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="viewModels:CustomerViewModel">
                                    <StackPanel DoubleTapped="ListViewItem_DoubleTapped" Orientation="Horizontal">
                                        <TextBlock Width="{StaticResource FirstNameWidth}" Text="{x:Bind FirstName}"/>
                                        <TextBlock Width="{StaticResource LastNameWidth}" Text="{x:Bind LastName}"/>
                                        <TextBlock Width="{StaticResource EmailAddressWidth}" Text="{x:Bind Email}"/>
                                        <TextBlock Width="{StaticResource PhoneNumberWidth}" Text="{x:Bind Phone}"/>
                                        <TextBlock Width="{StaticResource CompanyNameWidth}" Text="{x:Bind Company}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </uc:ContosoListView>
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>

</Page>
